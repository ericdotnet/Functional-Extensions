
trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build_and_publish
  displayName: Build and Publish
  jobs:
  - job: Version
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - script: echo 123
      displayName: Temp
    - script: echo "##vso[task.setvariable variable=versionVar;isOutput=true]$(curl -s https://raw.githubusercontent.com/vkhorikov/CSharpFunctionalExtensions/master/version.txt | head -1)"
      name: setVersionStep
      displayName: Set version variable
    - script: echo $(setVersionStep.versionVar)
      displayName: Echo version

  - job: Build
    dependsOn: Version
    pool:
      vmImage: 'ubuntu-16.04'
    variables:
      version: $[ dependencies.Version.outputs['setVersionStep.versionVar'] ]
    steps:
    - script: docker build . -t build-image -f Dockerfile --build-arg Version=$version
      displayName: Build an image
    - script: docker create --name build-container build-image
      displayName: Create a container
    - script: docker cp build-container:./app/out ./out
      displayName: Copy artifacts
    - publish: ./out
      artifact: NuGetPackage

  - job: Publish
    dependsOn: Build
    pool:
      vmImage: 'ubuntu-16.04'
